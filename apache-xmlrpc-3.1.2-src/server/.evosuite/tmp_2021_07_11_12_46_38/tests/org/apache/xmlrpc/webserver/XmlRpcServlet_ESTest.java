/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 11 08:21:16 GMT 2021
 */

package org.apache.xmlrpc.webserver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import javax.servlet.ServletConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.apache.xmlrpc.common.TypeConverterFactory;
import org.apache.xmlrpc.common.TypeConverterFactoryImpl;
import org.apache.xmlrpc.server.AbstractReflectiveHandlerMapping;
import org.apache.xmlrpc.server.RequestProcessorFactoryFactory;
import org.apache.xmlrpc.test.ClientIpTest;
import org.apache.xmlrpc.webserver.XmlRpcServlet;
import org.apache.xmlrpc.webserver.XmlRpcServletServer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlRpcServlet_ESTest extends XmlRpcServlet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      XmlRpcServletServer xmlRpcServletServer0 = xmlRpcServlet0.newXmlRpcServer(clientIpTest_ClientInfoServlet0);
      assertEquals(0, xmlRpcServletServer0.getMaxThreads());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      RequestProcessorFactoryFactory.StatelessProcessorFactoryFactory requestProcessorFactoryFactory_StatelessProcessorFactoryFactory0 = new RequestProcessorFactoryFactory.StatelessProcessorFactoryFactory();
      clientIpTest_ClientInfoServlet0.setRequestProcessorFactoryFactory(requestProcessorFactoryFactory_StatelessProcessorFactoryFactory0);
      RequestProcessorFactoryFactory requestProcessorFactoryFactory0 = clientIpTest_ClientInfoServlet0.getRequestProcessorFactoryFactory();
      assertSame(requestProcessorFactoryFactory0, requestProcessorFactoryFactory_StatelessProcessorFactoryFactory0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      // Undeclared exception!
      try { 
        xmlRpcServlet0.init((ServletConfig) clientIpTest_ClientInfoServlet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        xmlRpcServlet0.doPost(httpServletRequestWrapper0, httpServletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.XmlRpcServlet", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      TypeConverterFactoryImpl typeConverterFactoryImpl0 = new TypeConverterFactoryImpl();
      clientIpTest_ClientInfoServlet0.setTypeConverterFactory(typeConverterFactoryImpl0);
      TypeConverterFactory typeConverterFactory0 = clientIpTest_ClientInfoServlet0.getTypeConverterFactory();
      assertSame(typeConverterFactory0, typeConverterFactoryImpl0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      URL uRL0 = MockURL.getHttpExample();
      // Undeclared exception!
      try { 
        xmlRpcServlet0.newPropertyHandlerMapping(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.XmlRpcServletProduct", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      // Undeclared exception!
      try { 
        xmlRpcServlet0.newXmlRpcHandlerMapping();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.XmlRpcServletProduct", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      // Undeclared exception!
      try { 
        xmlRpcServlet0.init((ServletConfig) xmlRpcServlet0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      clientIpTest_ClientInfoServlet0.log("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      clientIpTest_ClientInfoServlet0.setAuthenticationHandler((AbstractReflectiveHandlerMapping.AuthenticationHandler) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      TypeConverterFactory typeConverterFactory0 = clientIpTest_ClientInfoServlet0.getTypeConverterFactory();
      assertNull(typeConverterFactory0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlRpcServlet xmlRpcServlet0 = new XmlRpcServlet();
      XmlRpcServletServer xmlRpcServletServer0 = xmlRpcServlet0.getXmlRpcServletServer();
      assertNull(xmlRpcServletServer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      MockThrowable mockThrowable0 = new MockThrowable("");
      // Undeclared exception!
      try { 
        clientIpTest_ClientInfoServlet0.log("", (Throwable) mockThrowable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.XmlRpcServlet", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      RequestProcessorFactoryFactory requestProcessorFactoryFactory0 = clientIpTest_ClientInfoServlet0.getRequestProcessorFactoryFactory();
      assertNull(requestProcessorFactoryFactory0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClientIpTest.ClientInfoServlet clientIpTest_ClientInfoServlet0 = new ClientIpTest.ClientInfoServlet();
      AbstractReflectiveHandlerMapping.AuthenticationHandler abstractReflectiveHandlerMapping_AuthenticationHandler0 = clientIpTest_ClientInfoServlet0.getAuthenticationHandler();
      assertNull(abstractReflectiveHandlerMapping_AuthenticationHandler0);
  }
}

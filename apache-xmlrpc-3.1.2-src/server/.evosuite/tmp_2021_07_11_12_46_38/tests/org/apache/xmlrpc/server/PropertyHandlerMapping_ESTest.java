/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 11 08:20:57 GMT 2021
 */

package org.apache.xmlrpc.server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.URL;
import java.time.ZoneId;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.httpclient.HttpVersion;
import org.apache.xmlrpc.server.PropertyHandlerMapping;
import org.apache.xmlrpc.server.RequestProcessorFactoryFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PropertyHandlerMapping_ESTest extends PropertyHandlerMapping_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      HashMap<AbstractMap.SimpleEntry<HttpVersion, String>, String> hashMap0 = new HashMap<AbstractMap.SimpleEntry<HttpVersion, String>, String>();
      propertyHandlerMapping0.handlerMap = (Map) hashMap0;
      HttpVersion httpVersion0 = HttpVersion.HTTP_1_1;
      AbstractMap.SimpleEntry<HttpVersion, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<HttpVersion, String>(httpVersion0, "");
      hashMap0.put(abstractMap_SimpleEntry0, "");
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.removeHandler(".+,;qx#W^pHj\"r2b!");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.AbstractMap$SimpleEntry cannot be cast to java.lang.String
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      try { 
        propertyHandlerMapping0.newHandlerClass(classLoader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load class: 
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.newHandlerClass((ClassLoader) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      try { 
        propertyHandlerMapping0.load(classLoader0, map0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load class: Asia/Shanghai
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.load(classLoader0, (Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      hashMap0.put(propertyHandlerMapping0, classLoader0);
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.load(classLoader0, (Map) hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xmlrpc.server.PropertyHandlerMapping cannot be cast to java.lang.String
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      URL uRL0 = MockURL.getHttpExample();
      try { 
        propertyHandlerMapping0.load(classLoader0, uRL0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.load((ClassLoader) null, "eEGdKfU-UTL8B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      propertyHandlerMapping0.setRequestProcessorFactoryFactory((RequestProcessorFactoryFactory) null);
      Class<String> class0 = Class.class;
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.addHandler(")w3|\" Xv", class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.server.AbstractReflectiveHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.addHandler("O^QvF'LMb", class0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid parameter or result type: java.nio.charset.Charset
         //
         verifyException("org.apache.xmlrpc.common.TypeConverterFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("~Xhs3XM_a%):qM?<", "org.apache.log4j.helpers.Loader");
      propertyHandlerMapping0.load(classLoader0, (Map) hashMap0);
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      URL uRL0 = MockURL.getFtpExample();
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.load(classLoader0, uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      Class<Integer> class0 = Class.class;
      propertyHandlerMapping0.registerPublicMethods("rt^/f6zzd`{\";", class0);
      propertyHandlerMapping0.removeHandler("");
      assertFalse(propertyHandlerMapping0.isVoidMethodEnabled());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      Class<Integer> class0 = Class.class;
      propertyHandlerMapping0.addHandler("O,oI!QM=", class0);
      propertyHandlerMapping0.removeHandler("O,oI!QM=.shor");
      assertFalse(propertyHandlerMapping0.isVoidMethodEnabled());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Class<Object> class0 = propertyHandlerMapping0.newHandlerClass(classLoader0, "org.apache.log4j.helpers.Loader");
      assertFalse(class0.isArray());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      try { 
        propertyHandlerMapping0.load(classLoader0, "/>");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unable to locate resource />
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      Class<Integer> class0 = Class.class;
      propertyHandlerMapping0.addHandler("", class0);
      // Undeclared exception!
      try { 
        propertyHandlerMapping0.removeHandler((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PropertyHandlerMapping propertyHandlerMapping0 = new PropertyHandlerMapping();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      try { 
        propertyHandlerMapping0.load(classLoader0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to load class: 
         //
         verifyException("org.apache.xmlrpc.server.PropertyHandlerMapping", e);
      }
  }
}

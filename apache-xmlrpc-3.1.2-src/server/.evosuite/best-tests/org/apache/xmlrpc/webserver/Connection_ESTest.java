/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 11 10:39:25 GMT 2021
 */

package org.apache.xmlrpc.webserver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.SocketException;
import org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;
import org.apache.xmlrpc.common.XmlRpcNotAuthorizedException;
import org.apache.xmlrpc.server.XmlRpcLocalStreamServer;
import org.apache.xmlrpc.webserver.Connection;
import org.apache.xmlrpc.webserver.ConnectionServer;
import org.apache.xmlrpc.webserver.RequestData;
import org.apache.xmlrpc.webserver.WebServer;
import org.apache.xmlrpc.webserver.XmlRpcServletServer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Connection_ESTest extends Connection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      // Undeclared exception!
      try { 
        connection0.setResponseHeader("s-.(AIo", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      RequestData requestData0 = new RequestData(connection0);
      // Undeclared exception!
      try { 
        connection0.writeResponseHeader(requestData0, (-1690));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      // Undeclared exception!
      try { 
        connection0.writeResponse((RequestData) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      // Undeclared exception!
      try { 
        connection0.newOutputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      // Undeclared exception!
      try { 
        connection0.newInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      XmlRpcLocalStreamServer xmlRpcLocalStreamServer0 = new XmlRpcLocalStreamServer();
      Connection connection0 = null;
      try {
        connection0 = new Connection((WebServer) null, xmlRpcLocalStreamServer0, mockSocket0);
        fail("Expecting exception: SocketException");
      
      } catch(Throwable e) {
         //
         // Socket is not connected
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockSocket", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WebServer webServer0 = new WebServer((-435));
      ConnectionServer connectionServer0 = new ConnectionServer();
      Connection connection0 = null;
      try {
        connection0 = new Connection(webServer0, connectionServer0, (Socket) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      MockThrowable mockThrowable0 = new MockThrowable("s-.(AIo");
      // Undeclared exception!
      try { 
        connection0.writeErrorHeader((RequestData) null, mockThrowable0, (-445));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      connection0.run();
      InputStream inputStream0 = connection0.newInputStream();
      assertNotNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      RequestData requestData0 = new RequestData(connection0);
      XmlRpcNotAuthorizedException xmlRpcNotAuthorizedException0 = new XmlRpcNotAuthorizedException((String) null);
      // Undeclared exception!
      try { 
        connection0.writeErrorHeader(requestData0, xmlRpcNotAuthorizedException0, 1621);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      connection0.run();
      ByteArrayOutputStream byteArrayOutputStream0 = (ByteArrayOutputStream)connection0.newOutputStream();
      assertEquals(0, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      RequestData requestData0 = new RequestData(connection0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1621);
      // Undeclared exception!
      try { 
        connection0.writeError(requestData0, (Throwable) null, byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      connection0.close();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      connection0.shutdown();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XmlRpcServletServer xmlRpcServletServer0 = new XmlRpcServletServer();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1621);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultProtocolSocketFactory defaultProtocolSocketFactory0 = new DefaultProtocolSocketFactory();
      Socket socket0 = defaultProtocolSocketFactory0.createSocket("s-.(AIo", 1621);
      Connection connection0 = new Connection((WebServer) null, xmlRpcServletServer0, socket0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("\" options.", true);
      // Undeclared exception!
      try { 
        connection0.writeResponse((RequestData) null, mockFileOutputStream0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.io.MockFileOutputStream cannot be cast to java.io.ByteArrayOutputStream
         //
         verifyException("org.apache.xmlrpc.webserver.Connection", e);
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:48:58 GMT 2021
 */

package org.apache.xmlrpc.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Proxy;
import org.apache.xmlrpc.client.XmlRpcClient;
import org.apache.xmlrpc.client.XmlRpcSun15HttpTransportFactory;
import org.apache.xmlrpc.client.XmlRpcTransport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlRpcSun15HttpTransportFactory_ESTest extends XmlRpcSun15HttpTransportFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun15HttpTransportFactory xmlRpcSun15HttpTransportFactory0 = new XmlRpcSun15HttpTransportFactory(xmlRpcClient0);
      // Undeclared exception!
      try { 
        xmlRpcSun15HttpTransportFactory0.setProxy("", (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun15HttpTransportFactory xmlRpcSun15HttpTransportFactory0 = new XmlRpcSun15HttpTransportFactory(xmlRpcClient0);
      xmlRpcSun15HttpTransportFactory0.setProxy((Proxy) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun15HttpTransportFactory xmlRpcSun15HttpTransportFactory0 = new XmlRpcSun15HttpTransportFactory(xmlRpcClient0);
      XmlRpcTransport xmlRpcTransport0 = xmlRpcSun15HttpTransportFactory0.getTransport();
      assertNotNull(xmlRpcTransport0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun15HttpTransportFactory xmlRpcSun15HttpTransportFactory0 = new XmlRpcSun15HttpTransportFactory(xmlRpcClient0);
      xmlRpcSun15HttpTransportFactory0.setProxy("Apache XML RPC 3.0", 34);
  }
}

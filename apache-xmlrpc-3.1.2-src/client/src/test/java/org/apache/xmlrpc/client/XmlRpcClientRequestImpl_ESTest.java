/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:43:43 GMT 2021
 */

package org.apache.xmlrpc.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xmlrpc.XmlRpcRequestConfig;
import org.apache.xmlrpc.client.XmlRpcClientConfigImpl;
import org.apache.xmlrpc.client.XmlRpcClientRequestImpl;
import org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlRpcClientRequestImpl_ESTest extends XmlRpcClientRequestImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      Object[] objectArray0 = new Object[6];
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "", objectArray0);
      int int0 = xmlRpcClientRequestImpl0.getParameterCount();
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.push((Integer) null);
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcHttpRequestConfigImpl0, "", linkedList0);
      Object object0 = xmlRpcClientRequestImpl0.getParameter(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      Object[] objectArray0 = new Object[4];
      objectArray0[1] = (Object) xmlRpcClientConfigImpl0;
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "", objectArray0);
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl1 = (XmlRpcClientConfigImpl)xmlRpcClientRequestImpl0.getParameter(1);
      assertFalse(xmlRpcClientConfigImpl1.isGzipRequesting());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "", linkedList0);
      String string0 = xmlRpcClientRequestImpl0.getMethodName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      xmlRpcClientConfigImpl0.setEnabledForExtensions(true);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "IUaUg t", linkedList0);
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl1 = (XmlRpcClientConfigImpl)xmlRpcClientRequestImpl0.getConfig();
      assertFalse(xmlRpcClientConfigImpl1.isContentLengthOptional());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "", (Object[]) null);
      assertEquals(0, xmlRpcClientRequestImpl0.getParameterCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = null;
      try {
        xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl((XmlRpcRequestConfig) null, "e[3'n7u0Qy$TjbqP", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The request configuration must not be null.
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcClientRequestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      Object[] objectArray0 = new Object[4];
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = null;
      try {
        xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, (String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The method name must not be null.
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcClientRequestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = null;
      try {
        xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, (String) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // The method name must not be null.
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcClientRequestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "_4A", (List) null);
      // Undeclared exception!
      try { 
        xmlRpcClientRequestImpl0.getParameter(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcClientRequestImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "_4A", (List) null);
      String string0 = xmlRpcClientRequestImpl0.getMethodName();
      assertEquals("_4A", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "_4A", (List) null);
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl1 = (XmlRpcClientConfigImpl)xmlRpcClientRequestImpl0.getConfig();
      assertNull(xmlRpcClientConfigImpl1.getBasicUserName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "_4A", (List) null);
      int int0 = xmlRpcClientRequestImpl0.getParameterCount();
      assertEquals(0, int0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:43:33 GMT 2021
 */

package org.apache.xmlrpc.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URL;
import java.net.URLConnection;
import java.util.LinkedList;
import java.util.List;
import org.apache.xmlrpc.client.XmlRpcClient;
import org.apache.xmlrpc.client.XmlRpcClientConfig;
import org.apache.xmlrpc.client.XmlRpcClientConfigImpl;
import org.apache.xmlrpc.client.XmlRpcClientRequestImpl;
import org.apache.xmlrpc.client.XmlRpcLocalStreamTransport;
import org.apache.xmlrpc.client.XmlRpcStreamTransport;
import org.apache.xmlrpc.client.XmlRpcSun14HttpTransport;
import org.apache.xmlrpc.client.XmlRpcSunHttpTransport;
import org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl;
import org.apache.xmlrpc.common.XmlRpcStreamRequestProcessor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlRpcSunHttpTransport_ESTest extends XmlRpcSunHttpTransport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSunHttpTransport xmlRpcSunHttpTransport0 = new XmlRpcSunHttpTransport(xmlRpcClient0);
      URL uRL0 = MockURL.getFileExample();
      URLConnection uRLConnection0 = xmlRpcSunHttpTransport0.newURLConnection(uRL0);
      assertNull(uRLConnection0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSunHttpTransport xmlRpcSunHttpTransport0 = new XmlRpcSunHttpTransport(xmlRpcClient0);
      URLConnection uRLConnection0 = xmlRpcSunHttpTransport0.getURLConnection();
      assertNull(uRLConnection0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun14HttpTransport xmlRpcSun14HttpTransport0 = new XmlRpcSun14HttpTransport(xmlRpcClient0);
      XmlRpcStreamRequestProcessor xmlRpcStreamRequestProcessor0 = mock(XmlRpcStreamRequestProcessor.class, new ViolatedAssumptionAnswer());
      XmlRpcLocalStreamTransport xmlRpcLocalStreamTransport0 = new XmlRpcLocalStreamTransport(xmlRpcClient0, xmlRpcStreamRequestProcessor0);
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      Object[] objectArray0 = new Object[5];
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "Apache XML RPC 3.0", objectArray0);
      XmlRpcStreamTransport.ReqWriter xmlRpcStreamTransport_ReqWriter0 = xmlRpcLocalStreamTransport0.newReqWriter(xmlRpcClientRequestImpl0);
      // Undeclared exception!
      try { 
        xmlRpcSun14HttpTransport0.writeRequest(xmlRpcStreamTransport_ReqWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcSunHttpTransport", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun14HttpTransport xmlRpcSun14HttpTransport0 = new XmlRpcSun14HttpTransport(xmlRpcClient0);
      // Undeclared exception!
      try { 
        xmlRpcSun14HttpTransport0.setRequestHeader("#OY<)[FrkuqF+JO", "#OY<)[FrkuqF+JO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcSunHttpTransport", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSunHttpTransport xmlRpcSunHttpTransport0 = new XmlRpcSunHttpTransport(xmlRpcClient0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcHttpRequestConfigImpl0, "Apache XML RPC 3.0", (Object[]) null);
      // Undeclared exception!
      try { 
        xmlRpcSunHttpTransport0.sendRequest(xmlRpcClientRequestImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl cannot be cast to org.apache.xmlrpc.client.XmlRpcHttpClientConfig
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcSunHttpTransport", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSunHttpTransport xmlRpcSunHttpTransport0 = new XmlRpcSunHttpTransport(xmlRpcClient0);
      // Undeclared exception!
      try { 
        xmlRpcSunHttpTransport0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcSunHttpTransport", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSunHttpTransport xmlRpcSunHttpTransport0 = new XmlRpcSunHttpTransport(xmlRpcClient0);
      xmlRpcSunHttpTransport0.close();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      URL uRL0 = MockURL.getHttpExample();
      xmlRpcClientConfigImpl0.setServerURL(uRL0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      try { 
        xmlRpcClient0.execute((XmlRpcClientConfig) xmlRpcClientConfigImpl0, "Apache XML RPC 3.0", (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to read server's response: protocol doesn't support output
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcStreamTransport", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XmlRpcSun14HttpTransport xmlRpcSun14HttpTransport0 = new XmlRpcSun14HttpTransport((XmlRpcClient) null);
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      XmlRpcClientRequestImpl xmlRpcClientRequestImpl0 = new XmlRpcClientRequestImpl(xmlRpcClientConfigImpl0, "Apache XML RPC 3.0", (Object[]) null);
      // Undeclared exception!
      try { 
        xmlRpcSun14HttpTransport0.sendRequest(xmlRpcClientRequestImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun14HttpTransport xmlRpcSun14HttpTransport0 = new XmlRpcSun14HttpTransport(xmlRpcClient0);
      // Undeclared exception!
      try { 
        xmlRpcSun14HttpTransport0.newURLConnection((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XmlRpcClient xmlRpcClient0 = new XmlRpcClient();
      XmlRpcSun14HttpTransport xmlRpcSun14HttpTransport0 = new XmlRpcSun14HttpTransport(xmlRpcClient0);
      XmlRpcClientConfigImpl xmlRpcClientConfigImpl0 = new XmlRpcClientConfigImpl();
      // Undeclared exception!
      try { 
        xmlRpcSun14HttpTransport0.isResponseGzipCompressed(xmlRpcClientConfigImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.client.XmlRpcSunHttpTransport", e);
      }
  }
}

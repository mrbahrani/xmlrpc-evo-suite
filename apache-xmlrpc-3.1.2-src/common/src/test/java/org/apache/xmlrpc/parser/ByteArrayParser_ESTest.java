/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:26:29 GMT 2021
 */

package org.apache.xmlrpc.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xmlrpc.parser.ByteArrayParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteArrayParser_ESTest extends ByteArrayParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      byteArrayParser0.startElement("", "org.apache.xmlrpc.XmlRpcException", "org.apache.xmlrpc.XmlRpcException", attributes2Impl0);
      try { 
        byteArrayParser0.startElement("org.apache.xmlrpc.XmlRpcException", "RSJNHnVF|M+a", "", attributes2Impl0);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Unexpected start tag in atomic element: {org.apache.xmlrpc.XmlRpcException}RSJNHnVF|M+a
         //
         verifyException("org.apache.xmlrpc.parser.ByteArrayParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      try { 
        byteArrayParser0.endElement("Unexpected start tag in atomic element: ", "Unexpected start tag in atomic element: ", "lqR-4&2U%{w@O)J");
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Unexpected end tag in atomic element: {Unexpected start tag in atomic element: }Unexpected start tag in atomic element: 
         //
         verifyException("org.apache.xmlrpc.parser.ByteArrayParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      byteArrayParser0.startElement((String) null, (String) null, (String) null, attributes2Impl0);
      char[] charArray0 = new char[19];
      try { 
        byteArrayParser0.characters(charArray0, '\u0000', '');
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Failed to decode base64 stream.
         //
         verifyException("org.apache.xmlrpc.parser.ByteArrayParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      byteArrayParser0.startElement("0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d", (Attributes) null);
      char[] charArray0 = new char[5];
      charArray0[1] = '3';
      byteArrayParser0.characters(charArray0, 1, 1);
      try { 
        byteArrayParser0.endElement("0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d");
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Failed to decode base64 stream.
         //
         verifyException("org.apache.xmlrpc.parser.ByteArrayParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      try { 
        byteArrayParser0.endElement((String) null, "", "");
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Unexpected end tag in atomic element: 
         //
         verifyException("org.apache.xmlrpc.parser.ByteArrayParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        byteArrayParser0.characters(charArray0, (-2250), 1538);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2250
         //
         verifyException("org.apache.xmlrpc.parser.TypeParserImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      byteArrayParser0.startElement("5Q`", "Trailing garbage detected", "", attributesImpl0);
      // Undeclared exception!
      try { 
        byteArrayParser0.startElement("5Q`", (String) null, "5Q`", attributesImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      byteArrayParser0.startElement("0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d", (Attributes) null);
      byteArrayParser0.endElement("0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d", "0#Tlyim20\"Z9~.(d");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      // Undeclared exception!
      try { 
        byteArrayParser0.endElement("", (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      char[] charArray0 = new char[9];
      try { 
        byteArrayParser0.characters(charArray0, 8, 8);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Unexpected non-whitespace characters
         //
         verifyException("org.apache.xmlrpc.parser.ByteArrayParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      char[] charArray0 = new char[1];
      byteArrayParser0.characters(charArray0, (-3931), (-3931));
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      // Undeclared exception!
      try { 
        byteArrayParser0.characters((char[]) null, 112, 827);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.parser.TypeParserImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteArrayParser byteArrayParser0 = new ByteArrayParser();
      byteArrayParser0.startDocument();
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:29:48 GMT 2021
 */

package org.apache.xmlrpc.jaxb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.JAXBContext;
import org.apache.xmlrpc.jaxb.JaxbSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.xml.sax.SAXException;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JaxbSerializer_ESTest extends JaxbSerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<SAXException>[] classArray0 = (Class<SAXException>[]) Array.newInstance(Class.class, 3);
      Class<SAXException> class0 = SAXException.class;
      classArray0[0] = class0;
      classArray0[1] = class0;
      classArray0[2] = class0;
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      JAXBContext jAXBContext0 = JAXBContext.newInstance((Class[]) classArray0, (Map<String, ?>) hashMap0);
      JaxbSerializer jaxbSerializer0 = new JaxbSerializer(jAXBContext0);
      String string0 = jaxbSerializer0.getTagName();
      assertEquals("jaxb", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JaxbSerializer jaxbSerializer0 = new JaxbSerializer((JAXBContext) null);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      // Undeclared exception!
      try { 
        jaxbSerializer0.serialize(defaultHandler0, "jaxb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.jaxb.JaxbSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 3);
      Class<String> class0 = String.class;
      classArray0[0] = class0;
      classArray0[1] = classArray0[0];
      classArray0[2] = classArray0[0];
      JAXBContext jAXBContext0 = JAXBContext.newInstance(classArray0);
      JaxbSerializer jaxbSerializer0 = new JaxbSerializer(jAXBContext0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      // Undeclared exception!
      try { 
        jaxbSerializer0.serialize(xMLReaderAdapter0, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // obj parameter must not be null
         //
         verifyException("javax.xml.bind.helpers.AbstractMarshallerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 2);
      Class<Object> class0 = Object.class;
      classArray0[0] = class0;
      classArray0[1] = class0;
      JAXBContext jAXBContext0 = JAXBContext.newInstance(classArray0);
      JaxbSerializer jaxbSerializer0 = new JaxbSerializer(jAXBContext0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try { 
        jaxbSerializer0.serialize(xMLFilterImpl0, "value");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
      JAXBContext jAXBContext0 = JAXBContext.newInstance(classArray0);
      JaxbSerializer jaxbSerializer0 = new JaxbSerializer(jAXBContext0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      try { 
        jaxbSerializer0.serialize(defaultHandler2_0, defaultHandler2_0);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // class org.xml.sax.ext.DefaultHandler2 nor any of its super class is known to this context.
         //
         verifyException("org.apache.xmlrpc.jaxb.JaxbSerializer", e);
      }
  }
}

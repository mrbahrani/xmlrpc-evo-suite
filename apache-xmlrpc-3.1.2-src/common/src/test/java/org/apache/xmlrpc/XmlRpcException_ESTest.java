/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:29:31 GMT 2021
 */

package org.apache.xmlrpc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintStream;
import java.io.PrintWriter;
import org.apache.xmlrpc.XmlRpcException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XmlRpcException_ESTest extends XmlRpcException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException(2312, "");
      Throwable throwable0 = xmlRpcException0.getCause();
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException(2312, "");
      // Undeclared exception!
      try { 
        xmlRpcException0.printStackTrace((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockThrowable", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException(0, "Caused by:");
      // Undeclared exception!
      try { 
        xmlRpcException0.printStackTrace((PrintStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockThrowable", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      XmlRpcException xmlRpcException0 = new XmlRpcException(0, "", mockThrowable0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]mMv14oot~E[r9XMa+a");
      xmlRpcException0.printStackTrace((PrintWriter) mockPrintWriter0);
      assertEquals(0, xmlRpcException0.code);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException(2312, "");
      PrintWriter printWriter0 = mock(PrintWriter.class, new ViolatedAssumptionAnswer());
      doReturn((PrintWriter) null, (PrintWriter) null, (PrintWriter) null, (PrintWriter) null, (PrintWriter) null).when(printWriter0).append(any(java.lang.CharSequence.class));
      xmlRpcException0.printStackTrace(printWriter0);
      assertEquals(2312, xmlRpcException0.code);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException((-1160), (String) null, (Throwable) null);
      XmlRpcException xmlRpcException1 = new XmlRpcException((-1160), (String) null, xmlRpcException0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(">y4Jb6");
      xmlRpcException1.printStackTrace((PrintStream) mockPrintStream0);
      assertFalse(xmlRpcException0.equals((Object)xmlRpcException1));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException(2312, "");
      PrintStream printStream0 = mock(PrintStream.class, new ViolatedAssumptionAnswer());
      doReturn((PrintStream) null, (PrintStream) null, (PrintStream) null, (PrintStream) null, (PrintStream) null).when(printStream0).append(any(java.lang.CharSequence.class));
      xmlRpcException0.printStackTrace(printStream0);
      assertEquals(2312, xmlRpcException0.code);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XmlRpcException xmlRpcException0 = new XmlRpcException("");
      assertEquals(0, xmlRpcException0.code);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      XmlRpcException xmlRpcException0 = new XmlRpcException("y:[kr+.mG~n{S]r`", mockThrowable0);
      Throwable throwable0 = xmlRpcException0.getCause();
      assertSame(mockThrowable0, throwable0);
  }
}

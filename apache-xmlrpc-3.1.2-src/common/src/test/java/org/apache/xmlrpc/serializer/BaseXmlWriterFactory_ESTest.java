/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:30:44 GMT 2021
 */

package org.apache.xmlrpc.serializer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import org.apache.ws.commons.serialize.XMLWriter;
import org.apache.ws.commons.serialize.XMLWriterImpl;
import org.apache.xmlrpc.common.XmlRpcStreamConfig;
import org.apache.xmlrpc.serializer.BaseXmlWriterFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseXmlWriterFactory_ESTest extends BaseXmlWriterFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BaseXmlWriterFactory baseXmlWriterFactory0 = new BaseXmlWriterFactory();
      XMLWriter xMLWriter0 = baseXmlWriterFactory0.newXmlWriter();
      assertFalse(xMLWriter0.isFlushing());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BaseXmlWriterFactory baseXmlWriterFactory0 = new BaseXmlWriterFactory();
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xmlRpcStreamConfig0).getEncoding();
      // Undeclared exception!
      try { 
        baseXmlWriterFactory0.getXmlWriter(xmlRpcStreamConfig0, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BaseXmlWriterFactory baseXmlWriterFactory0 = new BaseXmlWriterFactory();
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      doReturn("").when(xmlRpcStreamConfig0).getEncoding();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      try { 
        baseXmlWriterFactory0.getXmlWriter(xmlRpcStreamConfig0, outputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported encoding: 
         //
         verifyException("org.apache.xmlrpc.serializer.BaseXmlWriterFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BaseXmlWriterFactory baseXmlWriterFactory0 = new BaseXmlWriterFactory();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(xmlRpcStreamConfig0).getEncoding();
      XMLWriterImpl xMLWriterImpl0 = (XMLWriterImpl)baseXmlWriterFactory0.getXmlWriter(xmlRpcStreamConfig0, outputStream0);
      assertTrue(xMLWriterImpl0.isDeclarating());
      assertFalse(xMLWriterImpl0.isIndenting());
      assertTrue(xMLWriterImpl0.isFlushing());
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:36:12 GMT 2021
 */

package org.apache.xmlrpc.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import org.apache.xmlrpc.common.LocalStreamConnection;
import org.apache.xmlrpc.common.ServerStreamConnection;
import org.apache.xmlrpc.common.XmlRpcStreamRequestConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LocalStreamConnection_ESTest extends LocalStreamConnection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlRpcStreamRequestConfig xmlRpcStreamRequestConfig0 = mock(XmlRpcStreamRequestConfig.class, new ViolatedAssumptionAnswer());
      LocalStreamConnection localStreamConnection0 = new LocalStreamConnection(xmlRpcStreamRequestConfig0, (InputStream) null);
      InputStream inputStream0 = localStreamConnection0.getRequest();
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalStreamConnection localStreamConnection0 = new LocalStreamConnection((XmlRpcStreamRequestConfig) null, (InputStream) null);
      XmlRpcStreamRequestConfig xmlRpcStreamRequestConfig0 = localStreamConnection0.getConfig();
      assertNull(xmlRpcStreamRequestConfig0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XmlRpcStreamRequestConfig xmlRpcStreamRequestConfig0 = mock(XmlRpcStreamRequestConfig.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      LocalStreamConnection localStreamConnection0 = new LocalStreamConnection(xmlRpcStreamRequestConfig0, inputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = localStreamConnection0.getResponse();
      assertEquals("", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XmlRpcStreamRequestConfig xmlRpcStreamRequestConfig0 = mock(XmlRpcStreamRequestConfig.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn("7o 8n[#zF}LhQI}").when(inputStream0).toString();
      LocalStreamConnection localStreamConnection0 = new LocalStreamConnection(xmlRpcStreamRequestConfig0, inputStream0);
      InputStream inputStream1 = localStreamConnection0.getRequest();
      assertSame(inputStream1, inputStream0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlRpcStreamRequestConfig xmlRpcStreamRequestConfig0 = mock(XmlRpcStreamRequestConfig.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      LocalStreamConnection localStreamConnection0 = new LocalStreamConnection(xmlRpcStreamRequestConfig0, inputStream0);
      ServerStreamConnection serverStreamConnection0 = localStreamConnection0.getServerStreamConnection();
      assertNotNull(serverStreamConnection0);
  }
}

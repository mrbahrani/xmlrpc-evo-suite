/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:32:18 GMT 2021
 */

package org.apache.xmlrpc.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xmlrpc.parser.SerializableParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializableParser_ESTest extends SerializableParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SerializableParser serializableParser0 = new SerializableParser();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      serializableParser0.startElement("!q!g;^.eSC_h(/ LN", "!q!g;^.eSC_h(/ LN", "!q!g;^.eSC_h(/ LN", attributes0);
      serializableParser0.endElement("!q!g;^.eSC_h(/ LN", "!q!g;^.eSC_h(/ LN", "!q!g;^.eSC_h(/ LN");
      try { 
        serializableParser0.getResult();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Failed to read result object: null
         //
         verifyException("org.apache.xmlrpc.parser.SerializableParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SerializableParser serializableParser0 = new SerializableParser();
      serializableParser0.setResult("");
      // Undeclared exception!
      try { 
        serializableParser0.getResult();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to [B
         //
         verifyException("org.apache.xmlrpc.parser.SerializableParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SerializableParser serializableParser0 = new SerializableParser();
      // Undeclared exception!
      try { 
        serializableParser0.getResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }
}

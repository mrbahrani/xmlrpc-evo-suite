/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:30:05 GMT 2021
 */

package org.apache.xmlrpc.serializer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xmlrpc.common.TypeFactory;
import org.apache.xmlrpc.common.XmlRpcStreamConfig;
import org.apache.xmlrpc.serializer.ObjectArraySerializer;
import org.apache.xmlrpc.serializer.TypeSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectArraySerializer_ESTest extends ObjectArraySerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeSerializer typeSerializer0 = mock(TypeSerializer.class, new ViolatedAssumptionAnswer());
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      doReturn(typeSerializer0).when(typeFactory0).getSerializer(any(org.apache.xmlrpc.common.XmlRpcStreamConfig.class) , any());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, xmlRpcStreamConfig0);
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      objectArraySerializer0.writeObject(contentHandler0, "array");
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      doReturn((TypeSerializer) null).when(typeFactory0).getSerializer(any(org.apache.xmlrpc.common.XmlRpcStreamConfig.class) , any());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, xmlRpcStreamConfig0);
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      try { 
        objectArraySerializer0.writeObject(contentHandler0, "data");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Unsupported Java type: java.lang.String
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, (XmlRpcStreamConfig) null);
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        objectArraySerializer0.writeData(contentHandler0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, (XmlRpcStreamConfig) null);
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        objectArraySerializer0.writeData(contentHandler0, "array");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to [Ljava.lang.Object;
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, xmlRpcStreamConfig0);
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        objectArraySerializer0.write(contentHandler0, contentHandler0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.org.xml.sax.ContentHandler$MockitoMock$1340465533 cannot be cast to [Ljava.lang.Object;
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      doReturn((TypeSerializer) null).when(typeFactory0).getSerializer(any(org.apache.xmlrpc.common.XmlRpcStreamConfig.class) , any());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, xmlRpcStreamConfig0);
      // Undeclared exception!
      try { 
        objectArraySerializer0.writeObject((ContentHandler) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, xmlRpcStreamConfig0);
      // Undeclared exception!
      try { 
        objectArraySerializer0.write(contentHandler0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TypeFactory typeFactory0 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      XmlRpcStreamConfig xmlRpcStreamConfig0 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer0 = new ObjectArraySerializer(typeFactory0, xmlRpcStreamConfig0);
      TypeFactory typeFactory1 = mock(TypeFactory.class, new ViolatedAssumptionAnswer());
      doReturn(objectArraySerializer0).when(typeFactory1).getSerializer(any(org.apache.xmlrpc.common.XmlRpcStreamConfig.class) , any());
      XmlRpcStreamConfig xmlRpcStreamConfig1 = mock(XmlRpcStreamConfig.class, new ViolatedAssumptionAnswer());
      ObjectArraySerializer objectArraySerializer1 = new ObjectArraySerializer(typeFactory1, xmlRpcStreamConfig1);
      ContentHandler contentHandler0 = mock(ContentHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        objectArraySerializer1.writeObject(contentHandler0, "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to [Ljava.lang.Object;
         //
         verifyException("org.apache.xmlrpc.serializer.ObjectArraySerializer", e);
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:26:56 GMT 2021
 */

package org.apache.xmlrpc.serializer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.ws.commons.util.NamespaceContextImpl;
import org.apache.xmlrpc.common.TypeFactory;
import org.apache.xmlrpc.common.TypeFactoryImpl;
import org.apache.xmlrpc.common.XmlRpcController;
import org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl;
import org.apache.xmlrpc.common.XmlRpcStreamConfig;
import org.apache.xmlrpc.parser.TypeParser;
import org.apache.xmlrpc.serializer.MapSerializer;
import org.apache.xmlrpc.serializer.TypeSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MapSerializer_ESTest extends MapSerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      NamespaceContextImpl namespaceContextImpl0 = new NamespaceContextImpl();
      TypeParser typeParser0 = typeFactoryImpl0.getParser(xmlRpcHttpRequestConfigImpl0, namespaceContextImpl0, "", "struct");
      TypeSerializer typeSerializer0 = typeFactoryImpl0.getSerializer(xmlRpcHttpRequestConfigImpl0, "");
      Object object0 = new Object();
      try { 
        mapSerializer0.writeEntry(typeParser0, typeSerializer0, object0);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Expected struct, got member
         //
         verifyException("org.apache.xmlrpc.parser.MapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      // Undeclared exception!
      try { 
        mapSerializer0.writeEntry((ContentHandler) null, xMLFilterImpl0, "\"@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl((XmlRpcController) null);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      // Undeclared exception!
      try { 
        mapSerializer0.writeData(xMLFilterImpl0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl((XmlRpcController) null);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        mapSerializer0.writeData(xMLFilterImpl0, object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.util.Map
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      NamespaceContextImpl namespaceContextImpl0 = new NamespaceContextImpl();
      TypeParser typeParser0 = typeFactoryImpl0.getParser(xmlRpcHttpRequestConfigImpl0, namespaceContextImpl0, "", "struct");
      try { 
        mapSerializer0.write(typeParser0, typeParser0);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Expected struct, got value
         //
         verifyException("org.apache.xmlrpc.parser.MapParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        mapSerializer0.write(xMLReaderAdapter0, object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.util.Map
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      xmlRpcHttpRequestConfigImpl0.setEnabledForExtensions(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try { 
        mapSerializer0.writeEntry(xMLFilterImpl0, xmlRpcHttpRequestConfigImpl0, "member");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Unsupported Java type: org.apache.xmlrpc.common.XmlRpcHttpRequestConfigImpl
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      xmlRpcHttpRequestConfigImpl0.setEnabledForExtensions(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      mapSerializer0.writeEntry(xMLFilterImpl0, "value", "member");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XmlRpcController xmlRpcController0 = mock(XmlRpcController.class, new ViolatedAssumptionAnswer());
      TypeFactoryImpl typeFactoryImpl0 = new TypeFactoryImpl(xmlRpcController0);
      XmlRpcHttpRequestConfigImpl xmlRpcHttpRequestConfigImpl0 = new XmlRpcHttpRequestConfigImpl();
      MapSerializer mapSerializer0 = new MapSerializer(typeFactoryImpl0, xmlRpcHttpRequestConfigImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Object object0 = new Object();
      try { 
        mapSerializer0.writeEntry(defaultHandler2_0, xmlRpcHttpRequestConfigImpl0, object0);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // Unsupported Java type: java.lang.Object
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      MapSerializer mapSerializer0 = new MapSerializer((TypeFactory) null, (XmlRpcStreamConfig) null);
      // Undeclared exception!
      try { 
        mapSerializer0.write(xMLFilterImpl0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.serializer.MapSerializer", e);
      }
  }
}

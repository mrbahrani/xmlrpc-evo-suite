/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:23:58 GMT 2021
 */

package org.apache.xmlrpc.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xmlrpc.parser.NodeParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.LocatorImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExtParser_ESTest extends ExtParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      char[] charArray0 = new char[3];
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      // Undeclared exception!
      try { 
        nodeParser0.characters(charArray0, 0, (-6));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      // Undeclared exception!
      try { 
        nodeParser0.startElement((String) null, (String) null, "org.apache.xmlrpc.parser.ExtParser", attributes2Impl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      char[] charArray0 = new char[9];
      try { 
        nodeParser0.characters(charArray0, 0, 3);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Unexpected non-whitespace content: \u0000\u0000\u0000
         //
         verifyException("org.apache.xmlrpc.parser.ExtParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      // Undeclared exception!
      try { 
        nodeParser0.characters((char[]) null, 0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.parser.TypeParserImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        nodeParser0.characters(charArray0, 2454, 2454);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2454
         //
         verifyException("org.apache.xmlrpc.parser.TypeParserImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      nodeParser0.startPrefixMapping("[;2N.", "[;2N.");
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      nodeParser0.endElement("DIFpw&t6d", "DIFpw&t6d", "dom");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      // Undeclared exception!
      try { 
        nodeParser0.endElement("", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.parser.ExtParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      try { 
        nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "jhn", "http://ws.apache.org/xmlrpc/namespaces/extensions", attributes2Impl0);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Expected {http://ws.apache.org/xmlrpc/namespaces/extensions}dom, got {http://ws.apache.org/xmlrpc/namespaces/extensions}jhn
         //
         verifyException("org.apache.xmlrpc.parser.ExtParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      // Undeclared exception!
      try { 
        nodeParser0.startElement(",lZ#xO]jn", "_@$g4|x}0MK1", "]$", attributesImpl0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      nodeParser0.startPrefixMapping("[;2N{", "r(6g:(*XG");
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      nodeParser0.startPrefixMapping("#,<UJ_js /F", (String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      // Undeclared exception!
      try { 
        nodeParser0.processingInstruction((String) null, "4f%DkG<2");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      nodeParser0.processingInstruction("", ")fm)Ky+V/1avcWU.");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      nodeParser0.setDocumentLocator(locatorImpl0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      nodeParser0.setDocumentLocator(locatorImpl0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      try { 
        nodeParser0.skippedEntity("40r:P.7`!Wfl");
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // Don't know how to handle entity 40r:P.7`!Wfl
         //
         verifyException("org.apache.xmlrpc.parser.ExtParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      // Undeclared exception!
      try { 
        nodeParser0.skippedEntity("[;2N");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      nodeParser0.endPrefixMapping("LM'yx^Cd?s`u{");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      nodeParser0.endPrefixMapping("_@$g4|x}0MK1");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      char[] charArray0 = new char[3];
      nodeParser0.ignorableWhitespace(charArray0, (-1082506956), (-763));
      assertEquals(3, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      char[] charArray0 = new char[3];
      nodeParser0.characters(charArray0, 0, 0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      char[] charArray0 = new char[3];
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      nodeParser0.startElement("http://ws.apache.org/xmlrpc/namespaces/extensions", "dom", "[Ov[<<;NqLLuM]L%'", attributes2Impl0);
      // Undeclared exception!
      try { 
        nodeParser0.characters(charArray0, 0, 0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      nodeParser0.startDocument();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NodeParser nodeParser0 = new NodeParser();
      nodeParser0.endDocument();
  }
}

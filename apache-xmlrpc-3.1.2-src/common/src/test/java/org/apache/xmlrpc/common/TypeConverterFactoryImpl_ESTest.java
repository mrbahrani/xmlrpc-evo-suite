/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 01 06:18:16 GMT 2021
 */

package org.apache.xmlrpc.common;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xmlrpc.common.TypeConverter;
import org.apache.xmlrpc.common.TypeConverterFactoryImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TypeConverterFactoryImpl_ESTest extends TypeConverterFactoryImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeConverterFactoryImpl typeConverterFactoryImpl0 = new TypeConverterFactoryImpl();
      // Undeclared exception!
      try { 
        typeConverterFactoryImpl0.getTypeConverter((Class) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xmlrpc.common.TypeConverterFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeConverterFactoryImpl typeConverterFactoryImpl0 = new TypeConverterFactoryImpl();
      Class<Integer> class0 = Integer.class;
      TypeConverter typeConverter0 = typeConverterFactoryImpl0.getTypeConverter(class0);
      assertNotNull(typeConverter0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeConverterFactoryImpl typeConverterFactoryImpl0 = new TypeConverterFactoryImpl();
      Class<Object> class0 = Object.class;
      TypeConverter typeConverter0 = typeConverterFactoryImpl0.getTypeConverter(class0);
      assertNotNull(typeConverter0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 11 08:16:00 GMT 2021
 */

package org.apache.xmlrpc.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.xmlrpc.util.ThreadPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThreadPool_ESTest extends ThreadPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(932, "-");
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task0).toString();
      threadPool0.startTask(threadPool_Task0);
      ThreadPool.Task threadPool_Task1 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task1).toString();
      threadPool0.addTask(threadPool_Task1);
      threadPool0.getMaxThreads();
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task2 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.startTask(threadPool_Task2);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(0, "Om:>g>kv6{:_");
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      ThreadPool.Task threadPool_Task1 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task1).toString();
      threadPool0.startTask(threadPool_Task1);
      ThreadPool.Task threadPool_Task2 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task2).toString();
      threadPool0.startTask(threadPool_Task2);
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.startTask(threadPool_Task0);
      threadPool0.getNumThreads();
      threadPool0.getMaxThreads();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getNumThreads();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(0, (String) null);
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task0).toString();
      threadPool0.startTask(threadPool_Task0);
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task1 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task1).toString();
      threadPool0.shutdown();
      threadPool0.startTask(threadPool_Task1);
      ThreadPool.Task threadPool_Task2 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task2).toString();
      threadPool0.startTask(threadPool_Task2);
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task3 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task3).toString();
      threadPool0.startTask(threadPool_Task3);
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task4 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task4).toString();
      ThreadPool.Task threadPool_Task5 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task5).toString();
      threadPool0.addTask(threadPool_Task5);
      threadPool0.addTask(threadPool_Task4);
      ThreadPool.Task threadPool_Task6 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task6).toString();
      threadPool0.addTask(threadPool_Task6);
      threadPool0.shutdown();
      threadPool0.getMaxThreads();
      threadPool0.getNumThreads();
      ThreadPool.Task threadPool_Task7 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task7).toString();
      threadPool0.addTask(threadPool_Task7);
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.getMaxThreads();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getNumThreads();
      threadPool0.addTask((ThreadPool.Task) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(1, (String) null);
      threadPool0.shutdown();
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task0).toString();
      threadPool0.startTask(threadPool_Task0);
      threadPool0.shutdown();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.shutdown();
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.shutdown();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.getMaxThreads();
      threadPool0.getNumThreads();
      threadPool0.shutdown();
      threadPool0.getNumThreads();
      threadPool0.shutdown();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(0, "");
      threadPool0.startTask((ThreadPool.Task) null);
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task0).toString();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.startTask(threadPool_Task0);
      threadPool0.shutdown();
      threadPool0.getNumThreads();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getMaxThreads();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getMaxThreads();
      threadPool0.shutdown();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getNumThreads();
      threadPool0.getNumThreads();
      threadPool0.getNumThreads();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(480, "");
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(threadPool_Task0).toString();
      threadPool0.startTask(threadPool_Task0);
      threadPool0.shutdown();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.startTask((ThreadPool.Task) null);
      threadPool0.shutdown();
      threadPool0.getMaxThreads();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getNumThreads();
      threadPool0.shutdown();
      threadPool0.shutdown();
      threadPool0.getNumThreads();
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.addTask((ThreadPool.Task) null);
      threadPool0.getNumThreads();
      threadPool0.getNumThreads();
      threadPool0.getMaxThreads();
      threadPool0.shutdown();
      threadPool0.getNumThreads();
      threadPool0.getMaxThreads();
      threadPool0.shutdown();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(1, (String) null);
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task0);
      threadPool0.getMaxThreads();
      threadPool0.startTask((ThreadPool.Task) null);
      ThreadPool.Task threadPool_Task1 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.startTask(threadPool_Task1);
      threadPool0.addTask((ThreadPool.Task) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool((-3452), "");
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.startTask(threadPool_Task0);
      threadPool0.getMaxThreads();
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task1 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      ThreadPool.Task threadPool_Task2 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task2);
      threadPool0.addTask(threadPool_Task1);
      threadPool0.shutdown();
      ThreadPool.Task threadPool_Task3 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task3);
      threadPool0.getMaxThreads();
      threadPool0.getNumThreads();
      ThreadPool.Task threadPool_Task4 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task4);
      ThreadPool.Task threadPool_Task5 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task5);
      threadPool0.getMaxThreads();
      threadPool0.getNumThreads();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ThreadPool threadPool0 = new ThreadPool(4417, "");
      ThreadPool.Task threadPool_Task0 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      ThreadPool.Task threadPool_Task1 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      ThreadPool.Task threadPool_Task2 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      ThreadPool.Task threadPool_Task3 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task3);
      threadPool0.addTask(threadPool_Task2);
      threadPool0.addTask(threadPool_Task1);
      threadPool0.startTask(threadPool_Task0);
      ThreadPool.Task threadPool_Task4 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.startTask(threadPool_Task4);
      ThreadPool.Task threadPool_Task5 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task5);
      ThreadPool.Task threadPool_Task6 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      ThreadPool.Task threadPool_Task7 = mock(ThreadPool.Task.class, new ViolatedAssumptionAnswer());
      threadPool0.addTask(threadPool_Task7);
      threadPool0.shutdown();
      threadPool0.startTask(threadPool_Task6);
      threadPool0.shutdown();
      threadPool0.getMaxThreads();
      threadPool0.getNumThreads();
  }
}
